//-----------------------------------------------------------------------------
// Check template instantiations.
// - Check for valid issue slots
//-----------------------------------------------------------------------------
// RUN: not llvm-mdl %s 2>&1 | FileCheck %s

family test_predicates;

phases x { E1, E2, E3 };

cpu cpu {
   issue(E1) s1, s2;
   resource group { a, b, c };
   resource scalar, array[10];
   func_unit unit slot(GPR, group, array, scalar) -> s3;    // bad issue slot
}

func_unit unit(class regs; resource group, array, scalar) {
   port port<regs>(group);
   subunit sub(port, group, array, scalar);
   subunit sub(port, group, array, group.a);
}
subunit sub(port port; resource group, array, scalar) {
   latency lat(port, array, group, scalar);
}
latency lat(port port; resource array, group, scalar) { }

register R[0..15];
register_class GPR { r[0..15] }
operand IMM() {}

instruction add(GPR op1, GPR op2, IMM op3) { subunit(sub); }
instruction sub(GPR op1, GPR op2, IMM op3) { subunit(sub); }
instruction xor(GPR op1, GPR op2, IMM op3) { subunit(sub); }

// CHECK: Error: Issue slot resource not found: s3
// CHECK: Errors found, aborting
