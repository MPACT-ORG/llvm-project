//-----------------------------------------------------------------------------
// Check operand and instruction definitions.
//-----------------------------------------------------------------------------
// RUN: not llvm-mdl %s 2>&1 | FileCheck %s

family test;

protected phases test { F1, E[1..20] };

cpu cpu { func_unit FU unit(); }
func_unit unit() {}
subunit unit() { latency unit(); }
latency unit() { def(E1, $dst); }

register r[0..16];
register_class GPR { r[0..16] };

operand IMM() { type(int32); }
operand IMM2 : BogusIMM() { type(int9); }     // undefined operand base

instruction abc(GPR op, IMM imm) { subunit(unit); }

instruction ghi(GPR , GPR op2)                // Opnds must have names
     { subunit(unit); }

instruction jkl(GPR op1, IMM2 op2)            // Invalid derived operand use
     { subunit(unit); }

// CHECK: test_instr_2.mdl:23:17 Instruction operands must have names
// CHECK: test_instr_2.mdl:26:26 Invalid use of a derived operand: IMM2
// CHECK: test_instr_2.mdl:19:16 Undefined base operand: BogusIMM
// CHECK: Errors found, aborting
